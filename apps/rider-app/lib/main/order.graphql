query GetCurrentOrder($versionCode: Int!) {
  rider(id: "1") {
    id
    mobileNumber
    firstName
    lastName
    gender
    email
    media {
      address
    }
    orders(
      filter: {
        status: {
          in: [
            Requested
            Found
            NotFound
            NoCloseFound
            DriverAccepted
            Arrived
            Started
            WaitingForReview
            WaitingForPostPay
            WaitingForPrePay
          ]
        }
      }
    ) {
      ...CurrentOrder
      id
      status
      points {
        ...Point
        lat
        lng
      }
      driver {
        id
        firstName
        lastName
        media {
          address
        }
        mobileNumber
        carPlate
        car {
          name
        }
        carColor {
          name
        }
        rating
      }
      service {
        media {
          address
        }
        name
        prepayPercent
        cancellationTotalFee
      }
      directions {
        ...Point
        lat
        lng
      }
      etaPickup
      paidAmount
      costAfterCoupon
      costBest
      currency
      addresses
      waitMinutes
      startTimestamp
      durationBest
      riderLastSeenMessagesAt
      conversations {
        sentAt
      }
    }
    bookedOrders: ordersAggregate(filter: { status: { eq: Booked } }) {
      count {
        id
      }
    }
  }
  requireUpdate(versionCode: $versionCode)
  getCurrentOrderDriverLocation {
    ...Point
    lat
    lng
  }
}
mutation CreateOrder(
  $input: CreateOrderInput!
  $notificationPlayerId: String!
) {
  createOrder(input: $input) {
    ...CurrentOrder
  }
  updateOneRider(
    input: { id: "1", update: { notificationPlayerId: $notificationPlayerId } }
  ) {
    id
  }
}

mutation CancelOrder {
  cancelOrder {
    ...CurrentOrder
  }
}
mutation updateOrder($id: ID!, $update: UpdateOrderInput!) {
  updateOneOrder(input: { id: $id, update: $update }) {
    ...CurrentOrder
  }
}

subscription UpdatedOrder {
  orderUpdated {
    ...CurrentOrder
    id
    status
    etaPickup
    paidAmount
    costAfterCoupon
    durationBest
    startTimestamp
    costBest
    currency
    addresses
    waitMinutes
    riderLastSeenMessagesAt
    conversations {
      sentAt
    }
    points {
      ...Point
      # lat
      # lng
    }
    driver {
      firstName
      lastName
      media {
        address
      }
      mobileNumber
      carPlate
      car {
        name
      }
      carColor {
        name
      }
      rating
    }
    directions {
      ...Point
      lat
      lng
    }
    service {
      media {
        address
      }
      name
      prepayPercent
      cancellationTotalFee
    }
  }
}
subscription DriverLocationUpdated($driverId: ID!) {
  driverLocationUpdated(driverId: $driverId) {
    ...Point
  }
}

mutation SubmitFeedback(
  $score: Int!
  $description: String!
  $orderId: ID!
  $parameterIds: [ID!]!
) {
  submitReview(
    review: {
      score: $score
      description: $description
      requestId: $orderId
      parameterIds: $parameterIds
    }
  ) {
    ...CurrentOrder
  }
}

query GetDriversLocation(
  $point: PointInput!
  $provider: GeoProvider
  $language: String!
) {
  getDriversLocation(center: $point) {
    lat
    lng
    ...Point
  }
  reverseGeocode(location: $point, language: $language, provider: $provider) {
    point {
      lat
      lng
      ...Point
    }
    address
  }
}
query GetReviewParameters {
  feedbackParameters {
    id
    title
    isGood
  }
}
query GetFare(
  $points: [PointInput!]!
  $couponCode: String
  $selectedOptionIds: [String!]
) {
  getFare(
    input: {
      points: $points
      couponCode: $couponCode
      selectedOptionIds: $selectedOptionIds
    }
  ) {
    distance
    duration
    currency
    directions {
      ...Point
      lat
      lng
    }
    services {
      id
      name
      services {
        id
        name
        description
        personCapacity
        prepayPercent
        twoWayAvailable
        media {
          address
        }
        options {
          id
          name
          type
          additionalFee
          icon
        }
        cost
        costAfterCoupon
      }
    }
    error
  }
}

mutation ApplyCoupon($code: String!) {
  applyCoupon(code: $code) {
    ...CurrentOrder
  }
}

mutation SendSOS($orderId: ID!, $location: PointInput) {
  sosSignal(orderId: $orderId, location: $location) {
    id
  }
}

query getPlaces(
  $keyWord: String!
  $point: PointInput
  $language: String!
  $radius: Int
  $provider: GeoProvider
) {
  getPlaces(
    keyword: $keyWord
    location: $point
    language: $language
    radius: $radius
    provider: $provider
  ) {
    point {
      lat
      lng
      ...Point
    }
    title
    address
  }
}

query reverseGeocode(
  $location: PointInput!
  $provider: GeoProvider
  $language: String!
) {
  reverseGeocode(
    location: $location
    provider: $provider
    language: $language
  ) {
    point {
      lat
      lng
      ...Point
    }
    title
    address
  }
}
